fn = 'dff_ZL_h37_20161113_fied1_d167_3x';       %#####################################################
load(fn);
load('ROCColorMap');
temp = dff_subtr_preSoundmean;   % dff_subtr_preSoundmean  dff_prctileF0  dff_meanF0   #####################################################
SmoothBand = 11;


length_frames_T = length( temp{1}(1,[F_num_T(1,1):F_num_T(1,2)]));
length_frames_A = length( temp{1}(1,[F_num_A(1,1):F_num_A(1,2)]));
for nROI = 1:nROIs
    for triN = 1:TrialN
        CaSigAlineTone{nROI}(triN,:) = temp{nROI}(triN,[F_num_T(triN,1):F_num_T(triN,2)]);  % get the same frames before and after tone onset 
        CaSigMean_Tone{nROI}(triN,:) = smooth(CaSigAlineTone{nROI}(triN,:),SmoothBand); % use smooth to get the moving average value
        CaSigAlineAct{nROI}(triN,:) = temp{nROI}(triN,[F_num_A(triN,1):F_num_A(triN,2)]);  % get the same frames before and after choice   
        CaSigMean_Act{nROI}(triN,:) = smooth(CaSigAlineAct{nROI}(triN,:),SmoothBand); 
    end    
end
AlineCaSigData.CaSigAlineTone = CaSigAlineTone;
AlineCaSigData.CaSigMean_Tone = CaSigMean_Tone;
AlineCaSigData.CaSigAlineAct = CaSigAlineAct;
AlineCaSigData.CaSigMean_Act = CaSigMean_Act;
AlineCaSigData.length_frames_T = length_frames_T;
AlineCaSigData.length_frames_A = length_frames_A;
save(fn,'AlineCaSigData','ROCColorMap','-append');
%% find index
CaSigAlineTone = AlineCaSigData.CaSigAlineTone;
CaSigMean_Tone = AlineCaSigData.CaSigMean_Tone;
CaSigAlineAct = AlineCaSigData.CaSigAlineAct;
CaSigMean_Act = AlineCaSigData.CaSigMean_Act;
length_frames_T = AlineCaSigData.length_frames_T;
length_frames_A = AlineCaSigData.length_frames_A;

AllTri = [1:TrialN];            % Define trials that are used
MisExcl = find(Miss_Ind==0);
ProbTri = find(Probe_Ind==1);
NonProbTri = find(Probe_Ind==0);
Trials = {AllTri,MisExcl,ProbTri,NonProbTri};
TrialsName = {'AllTri','MisExcl','ProbTri','NonProbTri'};

LowHighTyp = double(Trial_type)';        % Define Label: 0 and 1
NovUnnovTyp = double(Probe_Ind)';
LeftRightType = double(Action_choice)';
MisNonMisType = double(Miss_Ind)';

Labels = {LowHighTyp,NovUnnovTyp,LeftRightType,MisNonMisType};
LabelsName = {'LowHighTyp','NovUnnovTyp','LeftRightType','MisNonMis'};

temp_Ind = 1; % ######################   Select  trials that are needed:  1:AllTri    2:MisExcl   3:ProbTri   4:NonProbTri

temp_Type = 1;% ############   Select  labels that are needed:  1:LowHighTyp    2:NovUnnovTyp   3:LeftRightType   
%% 
UseRaw = 0; % 0: use smooth mean   1 :use the raw data
LabelType = Labels{temp_Type}(Trials{temp_Ind});
StartT = tic;
for nROI = 1:nROIs
    tic
    CaSigMeanT=zeros(length(Trials{temp_Ind}),1);
    CaSigMeanA=zeros(length(Trials{temp_Ind}),1);
    for FrT = 1:length_frames_T
        if ~UseRaw 
            ROCout1_temp(FrT) = ZL_roc_v1([CaSigMean_Tone{nROI}(Trials{temp_Ind},FrT),LabelType],0,0.05,0);
%             [AllROC,~,sigvalue]=ROCSiglevelGene([CaSigMean_Tone{nROI}(Trials{temp_Ind},FrT),LabelType],100,1,0.01);  % use shuffle data to get threshold
        else
            ROCout1_temp(FrT) = ZL_roc_v1([CaSigAlineTone{nROI}(Trials{temp_Ind},FrT),LabelType],0,0.05,0);
%             [AllROC,~,sigvalue]=ROCSiglevelGene([CaSigAlineTone{nROI}(Trials{temp_Ind},FrT),LabelType],100,1,0.01);  % use shuffle data to get threshold
        end
%         ToneRocShuffThresh(nROI,FrT) = sigvalue;  
    end
    ROCout1{nROI} = ROCout1_temp;    
    parfor FrA = 1:length_frames_A
        if ~UseRaw
            ROCout2_temp(FrA) = ZL_roc_v1([CaSigMean_Act{nROI}(Trials{temp_Ind},FrA),LabelType],0,0.05,0);
%             [AllROC,~,sigvalue]=ROCSiglevelGene([CaSigMean_Act{nROI}(Trials{temp_Ind},FrA),LabelType],100,1,0.01);  % use shuffle data to get threshold
        else
            ROCout2_temp(FrA) = ZL_roc_v1([CaSigAlineAct{nROI}(Trials{temp_Ind},FrA),LabelType],0,0.05,0);
%             [AllROC,~,sigvalue]=ROCSiglevelGene([CaSigAlineAct{nROI}(Trials{temp_Ind},FrA),LabelType],100,1,0.01);  % use shuffle data to get threshold
        end
%         ActRocShuffThresh(nROI,FrA) = sigvalue; 
    end    
    ROCout2{nROI} = ROCout2_temp;   
    toc
end
toc(StartT);
%%
for nROI = 1:nROIs
    tic
    AllAucVal_T = arrayfun(@(x) x.AUC, ROCout1{nROI});
    AllAucVal_A = arrayfun(@(x) x.AUC, ROCout2{nROI});
    T_ind = find(AllAucVal_T == max(AllAucVal_T));
    TMaxAUCFrame(nROI) = T_ind;    
    A_ind = find(AllAucVal_A == max(AllAucVal_A));
    AMaxAUCFrame(nROI) = A_ind;
    [AllROC,~,sigvalue]=ROCSiglevelGene([CaSigMean_Tone{nROI}(Trials{temp_Ind},T_ind),LabelType],500,1,0.01);  % use shuffle data to get threshold
    ToneRocShuffThresh(nROI) = sigvalue; 
    [AllROC,~,sigvalue]=ROCSiglevelGene([CaSigAlineAct{nROI}(Trials{temp_Ind},A_ind),LabelType],500,1,0.01);  % use shuffle data to get threshold
    ActRocShuffThresh(nROI) = sigvalue;
    toc
end
%%
if UseRaw == 0
%     ROCout.(['MeanT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]) = ROCout1;
%     ROCout.(['MeanA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))])  = ROCout2;
    ROCout.(['MeanT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type)) '_ShufThre']) = [ToneRocShuffThresh;ActRocShuffThresh];
    ROCout.(['MeanA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type)) '_MaxInd']) = [TMaxAUCFrame;AMaxAUCFrame];
else
%     ROCout.(['RawT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]) = ROCout1;
%     ROCout.(['RawA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))])  = ROCout2;    
    ROCout.(['RawT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type)) '_ShufThre']) = [ToneRocShuffThresh;ActRocShuffThresh];
    ROCout.(['RawA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type)) '_MaxInd']) = [TMaxAUCFrame;AMaxAUCFrame];
end

% save([fn(8:19) '_ROCout'],'ROCout');
% save([fn(8:19) '_ROCout'],'ROCout','-append');
%% Plotting of AllTri_LowHighTyp
fn = 'dff_ZL_h37_20161113_fied1_d167_3x';  %% use dff filename
AlineType = 0;  % 0: aline to tone   1:aline to choice  ########################
UseRawData = 0;  % 0: Use smooth Mean data   1:Use un mean data  ########################
temp_Ind = 2; %   1:AllTri    2:MisExcl   3:ProbTri   4:NonProbTri
temp_Type = 3;%   1:LowHighTyp    2:NovUnnovTyp   3:LeftRightType 4:MisNonMis
savefig = 1; % 0: don't save 1: save the fig
savePNG = 1; % 0: don't save 1: save to PPT

TrialsName = {'AllTri','MisExcl','ProbTri','NonProbTri'};
LabelsName = {'LowHighTyp','NovUnnovTyp','LeftRightType','MisNonMis'};

if ~exist(['ROC_plot']);
    mkdir(['ROC_plot']);    
end 
cd (['ROC_plot']);
DirName = ['ROC_' LabelsName{temp_Type}];
if ~exist(DirName);
    mkdir(DirName);
end  
cd(DirName);
SavePath = pwd; 
cd ..   
cd ..
if AlineType == 0
    if UseRawData == 0
        plot_data = ROCout.(['MeanT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);    
        if ~exist(['MeanT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);
            DirName = ['MeanT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))];          
        end
    else
        plot_data = ROCout.(['RawT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);
        if ~exist(['RawT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);
            DirName = ['RawT_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))];            
        end          
    end
    Frame_length = AlineCaSigData.length_frames_T;
    OriginPoint = MinOnsFrame;
else
    if UseRawData == 0
        plot_data = ROCout.(['MeanA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);
        if ~exist(['MeanA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);
            DirName = ['MeanA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))];          
        end        
    else
        plot_data = ROCout.(['RawA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]); 
        if ~exist(['RawA_ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]);
            DirName = ['RawA _ROCout_' cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))];            
        end        
    end 
    Frame_length = AlineCaSigData.length_frames_A;
    OriginPoint = MinActFrame;
end
%
% Z_Val_1(1:length(plot_data{1}(1).xfit),1) = 1;
Z_Val_2(1:length(plot_data{1}(1).xr),1) = 1;
Col = [flipud(ROCColorMap);ROCColorMap];
% plotting
fig = figure;hold on;
set(gcf,'color','w','position',[2000 100 600 600]);

for nROI = 1:nROIs            
    AllAucVal(nROI,:) = arrayfun(@(x) x.AUC, plot_data{nROI});
    maxInd1(nROI) = max(AllAucVal(nROI,:));  
    maxInd2(nROI) = max(AllAucVal(nROI,90:end)); 
end
[~, inds1] = sort(maxInd1);
[~, inds2] = sort(maxInd2);
subplot(1,2,1);
imagesc(AllAucVal(inds1,:));
colormap jet;
line([MinOnsFrame MinOnsFrame],[1 Frame_length],'color','w','linewidth',2);
title('Sort in early');
ylabel('Number of Neurons');
xlabel('Time(s)');
set(gca,'clim',[.4 .9],'xtick',[double(OriginPoint):1000/FrameTime:Frame_length],'xticklabel',[0:1:10],'fontweight','bold','fontsize',12,...
    'position',[0.1 0.2 0.3 0.6]);
text(-20,112,'Stim Onset');

subplot(1,2,2);
imagesc(AllAucVal(inds2,:))
colormap jet;
line([MinOnsFrame MinOnsFrame],[1 Frame_length],'color','w','linewidth',2);

title('Sort in late');
xlabel('Time(s)');
set(gca,'clim',[.4 .9],'xtick',[double(OriginPoint):1000/FrameTime:Frame_length],'xticklabel',[0:1:10],'fontweight','bold','fontsize',12,...
    'position',[0.45 0.2 0.3 0.6]);
colorbar('Position',[0.8 0.2 0.04 0.3])
if AlineType == 0
    if UseRawData == 0
        suptitle ({[' AUC Time Courses Tone Onset(mean) ' cell2mat(TrialsName(temp_Ind)) ' ' cell2mat(LabelsName(temp_Type))]} );
        if savefig 
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Mean' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);       
        end
        if savePNG
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Mean' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.png']); 
        end
    else
        suptitle ({['ROI-' num2str(nROI) ' AUC Time Courses Tone Onset(raw) '];...
            [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
        if savefig 
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Raw' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);        
        end     
        if savePNG
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Raw' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.png']);
        end
    end
else
    if UseRawData == 0
        suptitle ({['ROI-' num2str(nROI) ' AUC Time Courses Choice Onset(mean) '];...
            [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
        if savefig 
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Mean' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);        
        end   
        if savePNG
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Mean' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.png']); 
        end
    else
        suptitle ({['ROI-' num2str(nROI) ' AUC Time Courses Choice Onset(raw) '];...
            [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
        if savefig 
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Raw' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);        
        end         
        if savePNG
            saveas(fig,[SavePath '/' fn(8:19) '_AUC_Raw' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.png']);   
        end
    end
end    
%%
% Col = [ROCColorMap;flipud(ROCColorMap)];

for nROI = 30%:4%:20%:nROIs
    fig = figure;hold on;
    set(gcf,'color','w','position',[2000 100 500 400]);
    for FrT = 1:Frame_length
        plot3(plot_data{nROI}(FrT).xr,plot_data{nROI}(FrT).yr,Z_Val_2*FrT,...
            'color',Col(round(plot_data{nROI}(FrT).AUC*length(Col(:,1))),:),'linewidth',1);
% plot3(plot_data{nROI}(FrT).yr,plot_data{nROI}(FrT).xr,Z_Val_2*FrT,...
%             'color',Col(round(plot_data{nROI}(FrT).AUC*length(Col(:,1))),:));
    end
    colormap(ROCColorMap);
    colorbar('position',[.85 .15 .05 .6]);
    line([0.5 0.5],[1 1],[1 Frame_length],'color',[.8 .8 .8]);
    AllAucVal = arrayfun(@(x) x.AUC, plot_data{nROI});
    SE = arrayfun(@(x) x.SE, plot_data{nROI});
    plot3(AllAucVal,ones(1,Frame_length),1:Frame_length,'color',[.6 .2 0],'linewidth',3);
    SEvalue = [AllAucVal+SE fliplr(AllAucVal-SE)];
    patch(SEvalue,ones(1,2*Frame_length),[1:Frame_length fliplr(1:Frame_length)],[.6 .2 0]);
    patch([0 1 1 0],[0 1 1 0],[0 0 Frame_length Frame_length],[.7 .7 .7],'edgecolor','w');
    alpha .4
    line([0 1],[1 1],[Frame_length Frame_length],'color',[.8 .8 .8]);
    line([0 1],[1 1],[OriginPoint OriginPoint],'linestyle','--','color',[.8 .8 .8],'linewidth',2);
    if AlineType
        text(0.3,1,double(OriginPoint)+15,'Choice onset','fontweight','bold');
    else
        text(0.3,1,double(OriginPoint)+15,'Tone onset','fontweight','bold');
    end
    text(1,0.2,Frame_length,['Max AUC Value = ' num2str(max(AllAucVal))],'fontweight','bold');
    set(gca,'clim',[0.5 1],'ztick',[double(OriginPoint):1000/FrameTime:Frame_length],'zticklabel',[0:1:10],...
        'position',[.15 .15 .55 .7],'fontweight','bold','fontsize',12);
    xlabel('FPR/AUC');
    ylabel('TPR');
    zlabel('T(s)');
    view(-180,50);
    zlim([1 Frame_length]);
    xlim([0 1]);
    if AlineType == 0
        if UseRawData == 0
            title ({['ROI-' num2str(nROI) ' AUC/ROC Across Tone Onset(mean)'];...
                [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
            if savefig 
                saveas(fig,[SavePath '/' fn(8:19) '_ROI-' num2str(nROI) '_AUC_Mean' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);       
            end
        else
            title ({['ROI-' num2str(nROI) ' AUC/ROC Across Tone Onset(raw) '];...
                [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
            if savefig 
                saveas(fig,[SavePath '/' fn(8:19) '_ROI-' num2str(nROI) '_AUC_Raw' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);        
            end            
        end
    else
        if UseRawData == 0
            title ({['ROI-' num2str(nROI) ' AUC/ROC Across Choice Onset(mean) '];...
                [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
            if savefig 
                saveas(fig,[SavePath '/' fn(8:19) '_ROI-' num2str(nROI) '_AUC_Mean' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);        
            end            
        else
            title ({['ROI-' num2str(nROI) ' AUC/ROC Across Choice Onset(raw) '];...
                [cell2mat(TrialsName(temp_Ind)) '_' cell2mat(LabelsName(temp_Type))]},'interpreter','none' );
            if savefig 
                saveas(fig,[SavePath '/' fn(8:19) '_ROI-' num2str(nROI) '_AUC_Raw' TrialsName{temp_Ind}(1:3) LabelsName{temp_Type}(1:3) '.fig']);        
            end             
        end
    end    
end

%%


